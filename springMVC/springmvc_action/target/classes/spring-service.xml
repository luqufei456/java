<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.yiran.mvc.service.impl"/>

    <!-- 第一步：定义具体的平台事务管理器（DataSource事务管理器） 两个xml目前互不关联，在test中引入两个即可  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 第二步：定义通知，通知中要处理的就是事务 -->
    <!-- 这里的transaction-manager关联上面的平台事务管理器 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 配置事务的属性定义 -->
        <tx:attributes>
            <!-- 配置具体的方法的事务属性
                isolation			事务的隔离级别，默认是按数据库的隔离级别来
                propagation			事务的传播行为，默认是同一个事务
                timeout="-1":		事务的超时时间，默认值使用数据库的超时时间。
                read-only="false":	事务是否只读，默认可读写。
                rollback-for:		遇到哪些异常就回滚，其他的都不回滚
                no-rollback-for：	遇到哪些异常不回滚，其他的都回滚。和上面互斥的
             -->
            <!-- <tx:method name="transfer*" isolation="DEFAULT"	propagation="REQUIRED" timeout="-1" read-only="false" /> -->
            <tx:method name="transfer*"	propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <!-- select 查询 - 设置 是否只读，默认为false，因为这里是查询，所以改为只读 read-only="true" -->
            <tx:method name="find*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- 第三步：配置切入点，让通知关联切入点，即事务控制业务层的方法 -->
    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut expression="execution(* com.yiran.mvc.service.*.*(..))" id="txPointcut"/>
        <!-- 切面 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

</beans>